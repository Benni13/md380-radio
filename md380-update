#!/bin/bash

read -d . VERSION < /etc/debian_version
		if [ "$VERSION" == "7" ]; then
		fullname="/root/.fullname"
		callsign="/root/.callsign"
		LOGFILE="/root/.md380.log"
			echo ""
			echo "OK.  OS is DEBIAN WHEEZY."
			echo ""
			echo "DEBIAN JESSIE IS REQUIRED TO RUN THIS PROGRAM.  PLEASE UPGRADE YOUR OS BEFORE USING THIS PROGRAM."
			echo ""
			echo "PROGRAM WILL NOW EXIT!"
			echo ""
			now=$(date "+%Y-%d-%m %H:%M:%S")
			echo "$(cat /root/.fullname) $(cat /root/.callsign) ***  ERROR *** DEBIAN WHEEZY DETECTED at $now " >> $LOGFILE
			sleep 2
			now1=$(date "+%Y-%d-%m %H:%M:%S")
			echo "$(cat /root/.fullname) $(cat /root/.callsign) logged out at $now1 " >> $LOGFILE
			sleep 20
			exit
		elif [ "$VERSION" == "8" ]; then
			echo ""
			echo "OK.  OS is DEBIAN JESSIE."
			echo ""
			sleep 5
		fi

trap ctrl_c INT
clear
function ctrl_c() {
        echo ""
        echo "** Sorry CTRL-C not permitted.  Please exit with option 99."
        echo ""
}
 
##################################################################################
##################################################################################
###### PLEASE DO NOT COPY, MODIFY OR ALTER THIS PROGRAM                      #####
###### This program is copywritten by Gescio Oteco Alpuro - WH6AV ©2016      #####
###### Questions, bugs or to request additional features can be directed     #####
###### to my email address wh6av@allpuremedia.com                            #####
######                              v8.0                                     #####
##################################################################################
##################################################################################

wd=$(pwd)
uid=$(id -u)
fullname="/root/.fullname"
callsign="/root/.callsign"
timestamp1=`date --rfc-3339=seconds`
LOGFILE="/root/.md380.log"

if [ -d "/home/mmdvm" ]; then
	echo ""
else
	useradd mmdvm
	chown -R mmdvm:mmdvm /home/mmdvmm
fi

dist=`grep DISTRIB_ID /etc/*-release | awk -F '=' '{print $2}'`

if [ "$dist" == "Ubuntu" ]; then
	echo ""
	echo "OK.  OS is UBUNTU."
	echo ""
	sleep 5
elif [ "$dist" == "Debian" ]; then
	echo ""
	echo ""
	echo "OK.  OS is DEBIAN JESSIE."
	echo ""
	sleep 5
elif [ "$dist" == "Raspbian" ]; then
	echo ""
	echo "OK.  OS is RASPBIAN."
	echo ""
	sleep 5
elif [ "$dist" == "Arch" ]; then
	echo ""
	echo "OK.  OS is ARCH LINUX."
	echo ""
	sleep 5
else
	echo ""
fi	
echo ""
echo "PLEASE DO NOT COPY, MODIFY OR ALTER THIS PROGRAM"
echo "This program is copywritten by Gescio Oteco Alpuro - WH6AV ©2016"
echo "Questions, bugs or to request additional features can be directed"
echo "to my email address wh6av@allpuremedia.com"
echo "                             v8.0"

[ $uid -ne 0 ] && { echo "YOU MUST BE ROOT TO RUN THIS SCRIPT"; exit 1; }

							
if [ -f $fullname ]; then
	echo "Welcome "
	echo $(cat /root/.fullname) $(cat /root/.callsign)
	echo "$(cat /root/.fullname) $(cat /root/.callsign) logged in at $timestamp1" >> $LOGFILE
	sleep 5
	clear
else
	echo ""
	echo ""	
	echo -n "Please enter your FULL NAME and press [ENTER]: "
	read name; echo $name > $fullname
	echo ""	
	echo -n "Please enter your CALLSIGN and press [ENTER]: "
	read callsign1; echo $callsign1 > $callsign
	echo ""
	clear
	echo "$(cat /root/.fullname) $(cat /root/.callsign) logged in at $timestamp1" >> $LOGFILE
fi

while true
do
clear
echo ""
echo "PLEASE DO NOT COPY, MODIFY OR ALTER THIS PROGRAM"
echo "This program is copywritten by Gescio Oteco Alpuro - WH6AV ©2016"
echo "Questions, bugs or to request additional features can be directed"
echo "to my email address wh6av@allpuremedia.com"
echo "                             v8.0"

echo ""
echo "1)   Update source files for operating system"
echo "2)   Update applications for operating system"
echo "3)   Install Prerequisite programs for MD380TOOLS"
echo "4)   Install or update MD380TOOLS"
echo "5)   Flash new hacked firmware for MD380 or MD390 radio"
echo "6)   Flash DMR User Database to MD380 or MD390 radio"
echo "7)   Make a backup of raw (headless) codeplug from MD380 or MD390 radio"
echo "8)   Restore a backup of raw (headless) codeplug to MD380 or MD390 radio"
echo "9)   Install MMDVMHost"
echo "10)  Install service related programs for MMDVMHost"
echo "     **********************************************************************"
echo "          USE OPTION 10 ONLY IF MMDVMHOST IS IN THE FOLLOWING LOCATION:"      
echo "                         /home/mmdvm/Downloads/MMDVMHost              "      
echo "     **********************************************************************"
echo "11)  RESTART MMDVMHost"
echo "12)  STOP MMDVMHost"
echo "13)  START MMDVMHost"
echo "14)  Install MMDVMHost-Dashboard"
echo "15)  Install BRANDMEISTER-Dashboard"
echo "16)  Install WEB SERVICES"
echo "17)  Change root password"
echo "18)  REBOOT RASPBERRY PI"
echo "19)  SHUTDOWN RASPBERRY PI"
echo "20)  Enable md380-update autostart on login"
echo "21)  Install DV4MF2 Control Panel for DV4MINI"
echo ""
echo "99)  EXIT PROGRAM"
echo ""

echo -n "Please enter your choice.  " 
read choice
echo

case $choice in
	1) echo ""

		while true
		do
		clear
		timestamp1=`date --rfc-3339=seconds`
			echo ""
			echo "If you have updated less than a week ago, respond with N"
			echo ""
		read -p 'Proceed with operating system source files update ?  Y or N  ' aptvar1
			case $aptvar1 in
			[yY]* ) echo ""
				echo "Okay.  We will proceed to do update source files for operating system."
					file1="/usr/bin/apt-get"
					file2="/usr/bin/pacman"
					if [ -f $file1 ]; then
						apt-get update -y
					elif [ -f $file2 ]; then
						pacman -Sy
					fi
				echo ""
				echo "Alright, operating source files update completed."
				echo ""
				echo "$(cat /root/.fullname) $(cat /root/.callsign) OPERATING SYSTEM SOURCE FILES UPDATE executed at $timestamp1 " >> $LOGFILE
				break;;
			[nN]* ) echo ""
				break;;
			* )	echo "Please enter Y or N";;
			esac
		done

	;;
	2) echo ""
		while true
		do
		clear
		timestamp1=`date --rfc-3339=seconds`
			echo ""
			echo ""
		read -p 'Proceed with installed operating system applications update ?  Y or N  ' aptvar2
			case $aptvar2 in
			[yY]* ) echo ""
				echo "Okay.  We will proceed to update operating systems applications."
					file1="/usr/bin/apt-get"
					file2="/usr/bin/pacman"
					if [ -f $file1 ]; then
						apt-get upgrade -y
					elif [ -f $file2 ]; then
						pacman -Su
					fi
				echo ""
				echo "Alright, operating systems applications update completed."
				echo ""
				echo "$(cat /root/.fullname) $(cat /root/.callsign) OPERATING SYSTEM APPLICATIONS UPDATE executed at $timestamp1 " >> $LOGFILE
				break;;
			[nN]* ) echo ""
				echo "Moving on to next step."
				echo ""
				break;;
	
			* )	echo "Please enter Y or N";;
			esac
		done

	;;
	3) 	echo ""

		while true
		do
		timestamp1=`date --rfc-3339=seconds`
		clear
			echo ""
			echo ""
			echo ""
		read -p 'Is this an initial install of MD380TOOLS? Y or N  ' installvar
			case $installvar in
			[yY]* ) echo ""
				echo "Okay.  We will proceed to install the required files to run MD380TOOLS."
				echo ""
				echo "$(cat /root/.fullname) $(cat /root/.callsign) PREREQUISITE FILES INSTALLATION executed at $timestamp1 " >> $LOGFILE
				apt-get install gcc-arm-none-eabi binutils-arm-none-eabi libnewlib-arm-none-eabi libusb-1.0 python-usb -y
				apt-get install screen -y
				apt-get install git -y
				apt-get install python-pip -y
				pip install pyusb -U
				git clone https://github.com/walac/pyusb
				cd pyusb
				python setup.py install
	
				break;;

			[nN]* ) echo ""
				echo ""
				echo ""
				echo "Okay.  Back to Main Menu."
				echo ""
				echo ""
				echo ""
				break;;

			* )	echo "Please enter Y or N";;
			esac
		done
	
	;;
	4) echo ""
	clear
	wd=$(pwd)
	timestamp1=`date --rfc-3339=seconds`
	echo ""
	echo ""
	echo "Curent work directory is $wd"
	echo ""
	if [[ -d "$wd/../md380tools" ]]; then
		echo ""
		echo "md380tools exist"
		echo ""
		while true
		do
		read -p 'Would you like to update md380tools?  Y or N  ' updatemd380toolsvar
		case $updatemd380toolsvar in
			[yY]* ) echo ""
				echo "Okay.  We will proceed to update MD380TOOLS."
				echo ""
				cd $wd/../md380tools
				git pull
					if [ "$dist" == "Ubuntu" ]; then
						echo ""
						echo "OK.  Building for Ubuntu."
						echo ""
						sleep 5
						make clean
						make all
						echo "$(cat /root/.fullname) $(cat /root/.callsign) MD380TOOLS UPDATED executed at $timestamp1 " >> $LOGFILE
					elif [ "$dist" == "Raspbian" ]; then
						echo ""
						echo "OK.  Building for Raspbian."
						echo ""
						sleep 5
						make dist clean
						make all
						echo "$(cat /root/.fullname) $(cat /root/.callsign) MD380TOOLS UPDATED executed at $timestamp1 " >> $LOGFILE
					else
						make clean
						make all
					fi	
						sleep 5	
						echo ""
						echo "Okay MD380TOOLS has been updated."
						echo ""
						break;;
			[nN]* ) echo ""
				break;;
			* ) 	echo "Please enter Y or N.";;
		esac
		done
			else
				cd $wd/..
				git clone https://github.com/travisgoodspeed/md380tools
				cd md380tools
					if [ "$dist" == "Ubuntu" ]; then
						echo ""
						echo "OK.  Building for Ubuntu."
						echo ""
						sleep 5
						make clean
						echo "$(cat /root/.fullname) $(cat /root/.callsign) MD380TOOLS INSTALL executed at $timestamp1 " >> $LOGFILE
					elif [ "$dist" == "Raspbian" ]; then
						echo ""
						echo "OK.  Building for Raspbian."
						echo ""
						sleep 5
						make dist clean
						echo "$(cat /root/.fullname) $(cat /root/.callsign) MD380TOOLS INSTALL executed at $timestamp1 " >> $LOGFILE
					else
						make clean
						echo "$(cat /root/.fullname) $(cat /root/.callsign) MD380TOOLS INSTALL executed at $timestamp1 " >> $LOGFILE
					fi	
							
				make all
				echo "$(cat /root/.fullname) $(cat /root/.callsign) MD380TOOLS INSTALLED at $timestamp1 " >> $LOGFILE
				sleep 5
			fi
	;;
	5) echo ""

		while true
		do
		clear
		timestamp1=`date --rfc-3339=seconds`
		read -p 'Would you like to flash the firmware for your MD380 or MD390? Y or N  ' flashfwvar
			case $flashfwvar in
			[yY]* ) echo ""
				echo ""
				echo "Please ensure USB cable is connected to your RPi and Radio"
				echo ""
				echo "Please turn radio off."
				echo "Put your Radio in DFU-MODE"
				echo "Hold PTT and button above at the same time and turn radio on."
				echo "Waiting 20 seconds, after which flashing of your radio will start."
				echo ""

					while true
					do
					read -p 'Are you in DFU mode?  Y or N  ' dfumodevar
						case $dfumodevar in
						[yY]* ) echo ""
							echo "Proceeding to update radio firmware."
							cd ../md380tools
							make flash
							echo "$(cat /root/.fullname) $(cat /root/.callsign) MD380TOOLS FIRMWARE INSTALLATION executed at $timestamp1 " >> $LOGFILE
							sleep 10
							break;;
						[nN]* ) echo ""
							echo ""
							break;;
						* ) 
					esac
					done
				
				break;;

			[nN]* ) echo ""
				echo ""
				echo ""
				echo "Okay"
				echo ""
				echo ""
				echo ""
				break;;

			* )	echo "Please enter Y or N";;
			esac
		done
	;;
	6) echo ""
	
		while true
		do
		clear
		timestamp1=`date --rfc-3339=seconds`
		read -p 'Would you like to flash the DMR USER DATABASE for your MD380 or MD390? Y or N  ' flashdbvar
			case $flashdbvar in
			[yY]* ) echo ""
				echo ""
				echo "Please ensure USB cable is connected to your RPi and Radio"
				echo ""
				echo "Please turn radio on as you normally do."
				echo "Radio should not be in DFU-MODE!!!"
				echo ""
				echo "Waiting 20 seconds"
				echo ""
				sleep 20
				cd ../md380tools/db
				echo $wd
				make clean
				make all
				cd ../md380tools
				make flashdb
				echo $wd
				echo "$(cat /root/.fullname) $(cat /root/.callsign) DMR ID USER DATABASE executed at $timestamp1 " >> $LOGFILE
				echo "Once radio is turned on, make sure USERSCSV is enabled."
				echo "Select MENU, goto UTILITIES, goto MD380TOOLS, select ENABLE and exit out to main screen."
				echo ""
				echo ""
				echo "Enjoy!"
				echo "73 and Aloha!"
				echo ""
				echo "Gescio Alpuro - WH6AV"
		
				break;;
	
			[nN]* ) echo ""
				echo ""
				echo ""
				echo "73 and Aloha!"
				echo "Gescio Alpuro - WH6AV"
				echo ""
				echo ""
				echo ""
				break;;
	
			* )	echo "Please enter Y or N";;
			esac
		done	
	;;
	7) echo ""
	
		while true
		do
		clear
		timestamp1=`date --rfc-3339=seconds`
		read -p 'Would you like to create a raw backup codeplug for your MD380 or MD390? Y or N  ' rawbackupvar
			case $rawbackupvar in
			[yY]* ) echo ""
				echo "Please turn radio off."
				echo "Put your Radio in DFU-MODE"
				echo "Hold PTT and button above it at the same time and turn radio on."
				echo "LED on radio should be flashing red and green."
				echo ""
				echo "Please ensure USB cable is connected to your RPi and Radio"
				echo ""
				echo "Radio should be in DFU-MODE!"
				echo ""
				echo "Waiting 20 seconds"
				echo ""
				sleep 20
				cd $wd/md380tools/
				./md380-dfu read radio-codeplug.img
				echo ""
				echo "Raw (headless) codeplug backup has been made and saved!"
				echo "$(cat /root/.fullname) $(cat /root/.callsign) RAW BACKUP executed at $timestamp1 " >> $LOGFILE
		
				break;;
	
			[nN]* ) echo ""
				echo ""
				echo ""
				echo ""
				echo ""
				break;;
	
			* )	echo "Please enter Y or N";;
			esac
		done	
	;;
	8) echo ""
	
		while true
		do
		clear
		timestamp1=`date --rfc-3339=seconds`
		read -p 'Would you like to restore a raw backup codeplug to your MD380 or MD390? Y or N  ' rawrestorevar
			echo ""
			echo "YOU MUST CREATE A BACKUP OF YOUR RADIO FIRST TO USE THIS RESTORE!!!"
			echo ""
			case $rawrestorevar in
			[yY]* ) echo ""
				echo "Please turn radio off."
				echo "Put your Radio in DFU-MODE"
				echo "Hold PTT and button above it at the same time and turn radio on."
				echo "LED on radio should be flashing red and green."
				echo ""
				echo "Please ensure USB cable is connected to your RPi and Radio"
				echo ""
				echo "Radio should be in DFU-MODE!"
				echo ""
				echo "Waiting 20 seconds"
				echo ""
				sleep 20
				cd $wd/md380tools/
				./md380-dfu write radio-codeplug.img
				echo ""
				echo "Raw (headless) codeplug restore has been made!"
				echo "$(cat /root/.fullname) $(cat /root/.callsign) RAW RESTORE executed at $timestamp1 " >> $LOGFILE
				echo ""
				sleep 5
				break;;
	
			[nN]* ) echo ""
				echo ""
				echo ""
				echo ""
				echo ""
				break;;
	
			* )	echo "Please enter Y or N";;
			esac
		done	
	;;
	9) echo ""
		while true
		do
		clear
		wd=$(pwd)
		timestamp1=`date --rfc-3339=seconds`
			echo ""
		read -p 'Would you like to install MMDVMHost?  Y or N  ' mmdvmhostvar
			case $mmdvmhostvar in
			[yY]* ) echo ""
				echo "Okay.  We will proceed to install MMDVMHost."
				echo ""
				echo "Your current directory is $wd."
				echo ""
				sleep 5
				if [ "$wd" == "/home/mmdvm/md380-radio" ]; then
					cd ../Downloads
						if [ -d "MMDVMHost" ]; then
							echo "MMDVMHost is already installed"
							sleep 5
						else
							git clone https://github.com/g4klx/MMDVMHost
							cd MMDVMHost
							make
							echo "MMDVMHost Installation completed"
							sleep 5
						fi
				elif [ "$wd" == "/home/pi/md380-radio" ]; then
					cd ../Downloads
						if [ -d "MMDVMHost" ]; then
							echo "MMDVMHost is already installed"
							sleep 5
						else
							git clone https://github.com/g4klx/MMDVMHost
							cd MMDVMHost
							make
							echo "MMDVMHost Installation completed"
							sleep 5
						fi
				fi
				sleep 5
				echo "$(cat /root/.fullname) $(cat /root/.callsign) MMDVMHOST INSTALL executed at $timestamp1 " >> $LOGFILE
				break;;
			[nN]* ) echo ""
				break;;
			* ) 	echo "Please enter Y or N.";;
			esac
		done

	;;
	10) echo ""
		while true
		do
		clear
		timestamp1=`date --rfc-3339=seconds`
		read -p 'Are you sure you want to add MMDVMHost service and timer related files and enable them?  Y or N  '  srvtimevar
		case $srvtimevar in
			[yY]* ) echo ""

				cd /lib/systemd/system/
				wget http://66.75.80.170/mmdvmhost.service
				wget http://66.75.80.170/mmdvmhost.timer
				ln -s /lib/systemd/system/mmdvmhost.service /etc/systemd/system/mmdvmhost.service
				ln -s /lib/systemd/system/mmdvmhost.timer /etc/systemd/system/mmdvmhost.timer
				systemctl daemon-reload
				systemctl enable mmdvmhost.service
				systemctl enable mmdvmhost.timer
				echo ""
				echo "Files mmdvmhost.service and mmdvmhost.timer has been added and enabled."
				echo ""
				echo "$(cat /root/.fullname) $(cat /root/.callsign) MMDVMHOST SERVICE INSTALL executed at $timestamp1 " >> $LOGFILE
				break;;
			[nN]* ) echo ""
				break;;
			* ) 	echo "Please enter Y or N.";;
			esac
		done

	;;
	11) echo ""
		while true
		do
		clear
		timestamp1=`date --rfc-3339=seconds`
		read -p 'Are you sure you want to restart MMDVMHost service?  Y or N  '  restartmmdvmvar
		case $restartmmdvmvar in
			[yY]* ) echo ""

				systemctl restart mmdvmhost.service
				echo ""
				echo "MMDVMHOST has been restarted."
				echo ""
				echo "$(cat /root/.fullname) $(cat /root/.callsign) MMDVMHOST RESTART executed at $timestamp1 " >> $LOGFILE
				break;;
			[nN]* ) echo ""
				break;;
			* ) 	echo "Please enter Y or N.";;
			esac
		done

	;;
	12) echo ""
		while true
		do
		clear
		timestamp1=`date --rfc-3339=seconds`
		read -p 'Are you sure you want to STOP MMDVMHost?  Y or N  '  stopmmdvmvar
		case $stopmmdvmvar in
			[yY]* ) echo ""
				systemctl stop mmdvmhost.service
				echo ""
				echo "STOPPPING MMDVMHOST....."
				sleep 5
				echo "MMDVMHOST has stopped."
				echo ""
				echo "$(cat /root/.fullname) $(cat /root/.callsign) MMDVMHOST STOP executed at $timestamp1 " >> $LOGFILE
				break;;
			[nN]* ) echo ""
				break;;
			* ) 	echo "Please enter Y or N.";;
			esac
		done
	;;
	13) echo ""
		while true
		do
		clear
		timestamp1=`date --rfc-3339=seconds`
		read -p 'Are you sure you want to START MMDVMHost?  Y or N  '  stopmmdvmvar
		case $stopmmdvmvar in
			[yY]* ) echo ""
				systemctl start mmdvmhost.service
				echo ""
				echo "STARTING MMDVMHOST....."
				sleep 5
				echo "MMDVMHOST has started."
				echo ""
				echo "$(cat /root/.fullname) $(cat /root/.callsign) MMDVMHOST START executed at $timestamp1 " >> $LOGFILE
				break;;
			[nN]* ) echo ""
				break;;
			* ) 	echo "Please enter Y or N.";;
			esac
		done
	;;
	14) echo ""
		while true
		do
		clear
		timestamp1=`date --rfc-3339=seconds`
		read -p 'Are you sure you want to install MMDVMHost-Dashboard to your Raspberry Pi?  Y or N  ' mmdvmhostdbvar
		case $mmdvmhostdbvar in
			[yY]* ) echo ""
				echo "OK.  Installing MMDVMHost-Dashboard now."
				echo ""
					if [[ -d /var/www/html ]]; then
						cd /var/www/html
						git clone https://github.com/dg9vh/MMDVMHost-Dashboard
						echo ""
						echo "MMDVMHost-Dashboard has been installed"
						echo "To access MMDVMHost-Dashboard, please goto http://127.0.0.1/MMDVMHost-Dashboard"
						echo ""
						echo "$(cat /root/.fullname) $(cat /root/.callsign) MMDVMHOST DASHBOARD INSTALL executed at $timestamp1 " >> $LOGFILE
						sleep 5
					elif [[ -d /srv/http ]]; then
						cd /srv/http
						git clone https://github.com/dg9vh/MMDVMHost-Dashboard
						echo ""
						echo "MMDVMHost-Dashboard has been installed"
						echo "To access MMDVMHost-Dashboard, please goto http://127.0.0.1/MMDVMHost-Dashboard"
						echo ""
						echo "$(cat /root/.fullname) $(cat /root/.callsign) MMDVMHOST DASHBOARD INSTALL executed at $timestamp1 " >> $LOGFILE
						sleep 5
					else echo ""
						echo "Sorry.  Webserver directory not found."
						echo ""
						sleep 5
						
					fi
				break;;
		
			[nN]* ) echo ""
				break;;

			* )	echo "Please enter Y or N";;
			esac
		done
	;;
	15) echo ""
		while true
		do
		clear
		timestamp1=`date --rfc-3339=seconds`
		read -p 'Are you sure you want to install BrandMeister-Dashboard to your Raspberry Pi?  Y or N  ' mmdvmhostdbvar
		case $mmdvmhostdbvar in
			[yY]* ) echo ""
				echo "OK.  Installing BrandMeister-Dashboard now."
				echo ""
					if [[ -d /var/www/html ]]; then
						cd /var/www/html
						git clone https://github.com/zarya/BrandMeister-Dashboard
						echo ""
						echo "BrandMeister-Dashboard has been installed"
						echo "To access BrandMeister-Dashboard, please goto http://127.0.0.1/BrandMeister-Dashboard"
						echo ""
						echo "$(cat /root/.fullname) $(cat /root/.callsign) BRANDMEISTER DASHBOARD INSTALL executed at $timestamp1 " >> $LOGFILE
						sleep 5
					elif [[ -d /srv/http ]]; then
						cd /srv/http
						git clone https://github.com/zarya/BrandMeister-Dashboard
						echo ""
						echo "BrandMeister-Dashboard has been installed"
						echo "To access BrandMeister-Dashboard, please goto http://127.0.0.1/BrandMeister-Dashboard"
						echo ""
						echo "$(cat /root/.fullname) $(cat /root/.callsign) BRANDMEISTER DASHBOARD INSTALL executed at $timestamp1 " >> $LOGFILE
						sleep 5
					else echo ""
						echo "Sorry.  Webserver directory not found."
						echo ""
						sleep 5
					fi
				break;;
		
			[nN]* ) echo ""
				break;;

			* )	echo "Please enter Y or N";;
			esac
		done
	;;
	16) echo ""
		while true
		do
		clear
		timestamp1=`date --rfc-3339=seconds`
		read -p 'Would you like to install WEB SERVICES?  Y or N  ' rpwvar
		case $rpwvar in
			[yY]* ) echo ""
				echo "OK.  Installing WEB SERVICES.  PLEASE RELAX FOR A WHILE."
				echo ""
				if [ "$dist" == "Ubuntu" ]; then
					echo ""
					echo "OK.  OS is UBUNTU."
					echo ""
					echo "Proceeding to install APACHE2 WEB SERVER."
					sudo apt-get install apache2 -y
					sudo systemctl enable apache2
					sudo systemctl start apache2
					echo "APACHE2 WEB SERVER installed."
					sleep 5
					echo "Proceeding to install mysql-server and mysql-client."
					echo "During installation, you will be asked to setup the MySQL root user password. Enter the password and press ENTER key."
					echo "Re-enter the password and press ENTER key."
					sleep 10
					sudo apt-get install mysql-server mysql-client -y
					echo "MYSQL-SERVER and MYSQL-CLIENT installed."
					sleep 5
					echo "Proceeding to install PHP."
					sudo apt-get update 
					sudo apt-get install php7.0-mysql php7.0-curl php7.0-json php7.0-cgi php7.0 libapache2-mod-php7.0 -y
#					sudo apt-get install php5 libapache2-mod-php5 php5-mcrypt
					sudo systemctl restart apache2
					echo "PHP installed."
					sleep 5
				elif [ "$dist" == "Debian" ]; then
					echo ""
					echo "OK.  OS is DEBIAN JESSIE."
					echo ""
					echo "Proceeding to install APACHE2 WEB SERVER."
					sudo apt-get install apache2 -y
					sudo systemctl enable apache2
					sudo systemctl start apache2
					echo "APACHE2 WEB SERVER installed."
					sleep 5
					echo "Proceeding to install mysql-server and mysql-client."
					echo "During installation, you will be asked to setup the MySQL root user password. Enter the password and press ENTER key."
					echo "Re-enter the password and press ENTER key."
					sleep 10
					sudo apt-get install mysql-server mysql-client -y
					sleep 5
					echo "MYSQL-SERVER and MYSQL-CLIENT installed."
					sleep 5
					echo "Proceeding to install PHP."
					sudo apt-get update 
					sudo apt-get install php7.0-mysql php7.0-curl php7.0-json php7.0-cgi php7.0 libapache2-mod-php7.0 -y
#					sudo apt-get install php5 libapache2-mod-php5 php5-mcrypt
					sudo systemctl restart apache2
					echo "PHP installed."
					sleep 5
				elif [ "$dist" == "Raspbian" ]; then
					echo ""
					echo "OK.  OS is RASPBIAN."
					echo ""
					echo "Proceeding to install APACHE2 WEB SERVER."
					sudo apt-get install apache2 -y
					sudo systemctl enable apache2
					sudo systemctl start apache2
					echo "APACHE2 WEB SERVER installed."
					sleep 5
					echo "Proceeding to install mysql-server and mysql-client."
					echo "During installation, you will be asked to setup the MySQL root user password. Enter the password and press ENTER key."
					echo "Re-enter the password and press ENTER key."
					sleep 10
					sudo apt-get install mysql-server mysql-client -y
					echo "MYSQL-SERVER and MYSQL-CLIENT installed."
					sleep 5
					echo "Proceeding to install PHP."
					sudo apt-get update 
					sudo apt-get install php7.0-mysql php7.0-curl php7.0-json php7.0-cgi php7.0 libapache2-mod-php7.0 -y
#					sudo apt-get install php5 libapache2-mod-php5 php5-mcrypt
					sudo systemctl restart apache2
					echo "PHP installed."
					sleep 5
				elif [ "$dist" == "Arch" ]; then
					echo ""
					echo "OK.  OS is ARCH LINUX."
					echo ""
					sudo pacman -Syu
					sudo pacman -S apache
					systemctl enable httpd
					systemctl restart httpd
					sudo pacman -S mysql
					sudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
					systemctl enable mysqld
					systemctl restart mysqld
					sudo mysql_secure_installation
					sudo pacman -S php php-apache
					sudo systemctl restart httpd
					sleep 5
				else
					echo ""
				fi	
				
				echo ""
				echo "$(cat /root/.fullname) $(cat /root/.callsign) WEB SERVICES INSTALL executed at $timestamp1 " >> $LOGFILE
				sleep 5
				break;;
		
			[nN]* ) echo ""
				break;;
	
			* )	echo "Please enter Y or N";;
			esac
		done
	;;
	17) echo ""
		while true
		do
		clear
		timestamp1=`date --rfc-3339=seconds`
		read -p 'Would you like to change the password for root?  Y or N  ' rpwvar
		case $rpwvar in
			[yY]* ) echo ""
				echo "OK.  Changing password for root."
				echo ""
				sudo passwd root
				echo ""
				echo "Password for root has been changed."
				echo ""
				echo "$(cat /root/.fullname) $(cat /root/.callsign) ROOT PASSWORD CHANGE executed at $timestamp1 " >> $LOGFILE
				sleep 5
				break;;
		
			[nN]* ) echo ""
				break;;
	
			* )	echo "Please enter Y or N";;
			esac
		done
	;;
	18) echo ""
		while true
		do
		clear
		timestamp1=`date --rfc-3339=seconds`
		read -p 'ARE YOU SURE YOU WANT TO RESTART YOUR RASPBERRY PI?  Y or N  ' restartvar
		case $restartvar in
			[yY]* ) echo ""
				echo "OK.  Restarting Raspberry Pi now."
				echo ""
				echo "$(cat /root/.fullname) $(cat /root/.callsign) REBOOT executed at $timestamp1 " >> $LOGFILE
				sudo reboot
				break;;
		
			[nN]* ) echo ""
				break;;

			* )	echo "Please enter Y or N";;
			esac
		done
	;;
	19) echo ""
		while true
		do
		clear
		timestamp1=`date --rfc-3339=seconds`
		read -p 'ARE YOU SURE YOU WANT TO POWER OFF YOUR RASPBERRY PI?  Y or N  ' poweroffvar
		case $poweroffvar in
			[yY]* ) echo ""
				echo "OK.  POWERING OFF Raspberry PI NOW."
				echo ""
				echo "GOODBYE!!!"
				echo "$(cat /root/.fullname) $(cat /root/.callsign) POWEROFF executed at $timestamp1 " >> $LOGFILE
				sleep 5
				sudo poweroff
				break;;
		
			[nN]* ) echo ""
				break;;

			* )	echo "Please enter Y or N";;
			esac
		done
	;;
	20) echo ""
		while true
		do
		clear
		timestamp1=`date --rfc-3339=seconds`
		read -p 'ARE YOU SURE YOU WANT TO AUTOSTART MD380-UPDATE ON LOGIN?  Y or N  ' autostartvar
		case $autostartvar in
			[yY]* ) echo ""
				echo "OK.  AUTOSTART MD380-UPDATE on login enabled."
				echo ""
				echo "sudo ~/md380-radio/md380-update" >> ~/.bash_profile
				echo "NEXT LOGIN WILL TAKE YOU STRAIGHT TO MD380-UPDATE MENU."
				echo ""
				echo "$(cat /root/.fullname) $(cat /root/.callsign) MD380-UPDATE AUTOSTART executed at $timestamp1 " >> $LOGFILE
				sleep 5
				break;;
		
			[nN]* ) echo ""
				break;;

			* )	echo "Please enter Y or N";;
			esac
		done
	;;
	21) echo ""
		while true
		do
		clear
		timestamp1=`date --rfc-3339=seconds`
		read -p 'ARE YOU SURE YOU WANT TO INSTALL DV4MF2 CONTROL PANEL FOR DV4MINI?  Y or N  ' dv4mf2var
		case $dv4mf2var in
			[yY]* ) echo ""
				echo "OK.  DV4MF2 CONTROL PANEL will be installed for DV4MINI."
				echo ""
				cd ~Downloads
				wget http://66.75.80.170/DV4MF2.tgz
				tar zxvf DV4MF2.tgz
					file1="/usr/bin/mono"
					if [ -f $file1 ]; then
						echo "Your operating system meets the requirement to run DV4MF2 control panel."
						sleep 5 
					else 
						echo "Your operating system REQUIRES MONO to run DV4MF2 control panel."
						sleep 10
					fi
				
				echo ""
				echo "$(cat /root/.fullname) $(cat /root/.callsign) DV4MF2 INSTALLATION executed at $timestamp1 " >> $LOGFILE
				sleep 5
				break;;
		
			[nN]* ) echo ""
				break;;

			* )	echo "Please enter Y or N";;
			esac
		done
	;;
	99) echo ""
		echo ""
		echo "73 and Aloha!"
		echo "Gescio Alpuro - WH6AV"
		echo ""
		echo ""
		clear
		timestamp1=`date --rfc-3339=seconds`
		echo "$(cat /root/.fullname) $(cat /root/.callsign) logged out at $timestamp1 " >> $LOGFILE
		exit;;

	* )	echo "Please enter letter of coice";;
	esac
done
